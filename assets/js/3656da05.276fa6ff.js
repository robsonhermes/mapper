(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[751],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return l},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},s=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),s=u(t),f=o,g=s["".concat(c,".").concat(f)]||s[f]||m[f]||i;return t?r.createElement(g,a(a({ref:n},l),{},{components:t})):r.createElement(g,a({ref:n},l))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=s;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p.mdxType="string"==typeof e?e:o,a[1]=p;for(var u=2;u<i;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},6863:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return a},metadata:function(){return p},toc:function(){return c},default:function(){return l}});var r=t(2122),o=t(9756),i=(t(7294),t(3905)),a={id:"ignore",title:"Ignore",sidebar_label:"Ignore"},p={unversionedId:"mapping-configuration/ignore",id:"mapping-configuration/ignore",isDocsHomePage:!1,title:"Ignore",description:"When we want to completely ignore a member on the Destination or to avoid Unmapped Properties error, we can utilize ignore() which does nothing on the member. This ultimately makes the member undefined",source:"@site/docs/mapping-configuration/ignore.md",sourceDirName:"mapping-configuration",slug:"/mapping-configuration/ignore",permalink:"/docs/mapping-configuration/ignore",editUrl:"https://github.com/nartc/mapper/tree/main/docs-site/docs/mapping-configuration/ignore.md",version:"current",sidebar_label:"Ignore",frontMatter:{id:"ignore",title:"Ignore",sidebar_label:"Ignore"},sidebar:"docs",previous:{title:"NullSubstitution",permalink:"/docs/mapping-configuration/null-substitution"},next:{title:"MapWithArguments",permalink:"/docs/mapping-configuration/map-with-arguments"}},c=[],u={toc:c};function l(e){var n=e.components,t=(0,o.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"When we want to completely ignore a member on the ",(0,i.kt)("strong",{parentName:"p"},"Destination")," or to avoid ",(0,i.kt)("strong",{parentName:"p"},"Unmapped Properties")," error, we can utilize ",(0,i.kt)("inlineCode",{parentName:"p"},"ignore()")," which does nothing on the member. This ultimately makes the member ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import { ignore } from '@automapper/core';\n\nmapper\n  .createMap(User, UserDto)\n  .forMember((destination) => destination.fullName, ignore());\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ignore()")," will set the ",(0,i.kt)("inlineCode",{parentName:"p"},"TransformationType")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"TransformationType.Ignore")))}l.isMDXComponent=!0}}]);