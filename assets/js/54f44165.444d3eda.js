(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[152],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(f,i(i({ref:t},c),{},{components:n})):a.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9170:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return p},toc:function(){return l},default:function(){return c}});var a=n(2122),r=n(9756),o=(n(7294),n(3905)),i={id:"installation",title:"Installation",sidebar_label:"Installation"},p={unversionedId:"getting-started/installation",id:"getting-started/installation",isDocsHomePage:!1,title:"Installation",description:"`bash",source:"@site/docs/getting-started/installation.md",sourceDirName:"getting-started",slug:"/getting-started/installation",permalink:"/docs/getting-started/installation",editUrl:"https://github.com/nartc/mapper/tree/main/docs-site/docs/getting-started/installation.md",version:"current",sidebar_label:"Installation",frontMatter:{id:"installation",title:"Installation",sidebar_label:"Installation"},sidebar:"docs",previous:{title:"Architecture",permalink:"/docs/architecture"},next:{title:"Introduce to AutoMapper",permalink:"/docs/getting-started/introduce-to-automapper"}},l=[{value:"Summary",id:"summary",children:[]}],s={toc:l};function c(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i @automapper/core\n# or with yarn\nyarn add @automapper/core\n")),(0,o.kt)("h4",{id:"peer-dependencies"},"Peer Dependencies"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"@automapper/types")," is a ",(0,o.kt)("inlineCode",{parentName:"p"},"peerDependencies")," to all official ",(0,o.kt)("inlineCode",{parentName:"p"},"@automapper/*")," packages. This package provides type-def for the other packages so we can install it as a ",(0,o.kt)("inlineCode",{parentName:"p"},"devDependencies")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i -D @automapper/types\n# or with yarn\nyarn add -D @automapper/types\n")),(0,o.kt)("h4",{id:"pick-plugins"},"Pick plugin(s)"),(0,o.kt)("p",null,"Pick one or more plugins you want to use. At least one plugin is required. For brevity purpose of the documentations, I will use ",(0,o.kt)("inlineCode",{parentName:"p"},"@automapper/classes")," throughout when a plugin is mentioned. To learn more about Plugins, go to ",(0,o.kt)("a",{parentName:"p",href:"/docs/plugins-system/introduce-to-plugins"},"Plugins")," section."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i @automapper/classes\n# or with yarn\nyarn add @automapper/classes\n")),(0,o.kt)("p",null,"A plugin might have its own ",(0,o.kt)("inlineCode",{parentName:"p"},"peerDependencies")," as well. In this case, ",(0,o.kt)("inlineCode",{parentName:"p"},"@automapper/classes")," does have a ",(0,o.kt)("inlineCode",{parentName:"p"},"peerDependencies")," of ",(0,o.kt)("inlineCode",{parentName:"p"},"reflect-metadata")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i reflect-metadata\n# or with yarn\nyarn add reflect-metadata\n")),(0,o.kt)("h2",{id:"summary"},"Summary"),(0,o.kt)("p",null,"Here's all the installations in one command for you to copy"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i @automapper/{core,classes} reflect-metadata\nnpm i -D @automapper/types\n\n# or with yarn\n\nyarn add @automapper/{core,classes} reflect-metadata\nyarn add -D @automapper/types\n")))}c.isMDXComponent=!0}}]);