(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[822],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return g}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var o=r.createContext({}),p=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(o.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(t),g=i,m=d["".concat(o,".").concat(g)]||d[g]||c[g]||a;return t?r.createElement(m,s(s({ref:n},u),{},{components:t})):r.createElement(m,s({ref:n},u))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,s=new Array(a);s[0]=d;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l.mdxType="string"==typeof e?e:i,s[1]=l;for(var p=2;p<a;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3694:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return s},metadata:function(){return l},toc:function(){return o},default:function(){return u}});var r=t(2122),i=t(9756),a=(t(7294),t(3905)),s={id:"extend-plugin",title:"Extend plugin",sidebar_label:"Extend plugin"},l={unversionedId:"plugins-system/extend-plugin",id:"plugins-system/extend-plugin",isDocsHomePage:!1,title:"Extend plugin",description:"In addition to creating your own plugins, you can also extend existing plugins. After all, plugins are just Object.",source:"@site/docs/plugins-system/extend-plugin.md",sourceDirName:"plugins-system",slug:"/plugins-system/extend-plugin",permalink:"/docs/plugins-system/extend-plugin",editUrl:"https://github.com/nartc/mapper/tree/main/docs-site/docs/plugins-system/extend-plugin.md",version:"current",sidebar_label:"Extend plugin",frontMatter:{id:"extend-plugin",title:"Extend plugin",sidebar_label:"Extend plugin"},sidebar:"docs",previous:{title:"Create plugin",permalink:"/docs/plugins-system/create-plugin"},next:{title:"NestJS Integration",permalink:"/docs/nestjs"}},o=[],p={toc:o};function u(e){var n=e.components,t=(0,i.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"In addition to ",(0,a.kt)("a",{parentName:"p",href:"/docs/plugins-system/create-plugin"},"creating your own plugins"),", you can also ",(0,a.kt)("strong",{parentName:"p"},"extend existing plugins"),". After all, plugins are just ",(0,a.kt)("inlineCode",{parentName:"p"},"Object"),"."),(0,a.kt)("p",null,"The following example shows how to extend ",(0,a.kt)("inlineCode",{parentName:"p"},"@automapper/classes")," to convert all ",(0,a.kt)("inlineCode",{parentName:"p"},"null")," values to ",(0,a.kt)("inlineCode",{parentName:"p"},"undefined")," by customizing ",(0,a.kt)("inlineCode",{parentName:"p"},"preMap()")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"preMapArray()")," on ",(0,a.kt)("inlineCode",{parentName:"p"},"classes")," plugin."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const customClasses = (errorHandler: ErrorHandler) => {\n  // simple function to check for null and reassign to undefined\n  function nullify(srcObj: Record<string, unknown>) {\n    for (const srcKey in srcObj) {\n      if (srcObj[srcKey] === null) {\n        srcObj[srcKey] = undefined;\n      }\n\n      if (\n        typeof srcObj[srcKey] === 'object' &&\n        !Array.isArray(srcObj[srcKey])\n      ) {\n        nullify(srcObj[srcKey] as Record<string, unknown>);\n      }\n    }\n  }\n\n  // call the original pluginInitializer\n  const originalClasses = classes(errorHandler);\n\n  // grab the original preMap\n  const originalPreMap = originalClasses.preMap;\n\n  // customize the preMap\n  originalClasses.preMap = (...args) => {\n    const originalPreMapResult = originalPreMap(...args);\n    nullify(originalPreMapResult[0]);\n    return originalPreMapResult;\n  };\n\n  // add a custom preMapArray\n  originalClasses.preMapArray = (source, sourceArr) => {\n    return sourceArr.map((srcItem) => {\n      nullify(srcItem);\n      return srcItem;\n    });\n  };\n\n  // return the plugin object\n  return originalClasses;\n};\n")),(0,a.kt)("p",null,"With this in place, we can use it like any other plugin."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const mapper = createMapper({\n  name: 'customClasses',\n  pluginInitializer: customClasses,\n});\n")))}u.isMDXComponent=!0}}]);