(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[775],{3905:function(t,e,n){"use strict";n.d(e,{Zo:function(){return s},kt:function(){return f}});var r=n(7294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function u(t,e){if(null==t)return{};var n,r,i=function(t,e){if(null==t)return{};var n,r,i={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var l=r.createContext({}),p=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},s=function(t){var e=p(t.components);return r.createElement(l.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var n=t.components,i=t.mdxType,o=t.originalType,l=t.parentName,s=u(t,["components","mdxType","originalType","parentName"]),m=p(n),f=i,b=m["".concat(l,".").concat(f)]||m[f]||c[f]||o;return n?r.createElement(b,a(a({ref:e},s),{},{components:n})):r.createElement(b,a({ref:e},s))}));function f(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var o=n.length,a=new Array(o);a[0]=m;var u={};for(var l in e)hasOwnProperty.call(e,l)&&(u[l]=e[l]);u.originalType=t,u.mdxType="string"==typeof t?t:i,a[1]=u;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},865:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return a},metadata:function(){return u},toc:function(){return l},default:function(){return s}});var r=n(2122),i=n(9756),o=(n(7294),n(3905)),a={id:"null-substitution",title:"NullSubstitution",sidebar_label:"NullSubstitution"},u={unversionedId:"mapping-configuration/null-substitution",id:"mapping-configuration/null-substitution",isDocsHomePage:!1,title:"NullSubstitution",description:"nullSubstitution() takes in a raw value to map to the member on Destination. If you pass in an object, Mapper will map the object as-is without any consideration for nested Mapping.",source:"@site/docs/mapping-configuration/null-substitution.md",sourceDirName:"mapping-configuration",slug:"/mapping-configuration/null-substitution",permalink:"/docs/mapping-configuration/null-substitution",editUrl:"https://github.com/nartc/mapper/tree/main/docs-site/docs/mapping-configuration/null-substitution.md",version:"current",sidebar_label:"NullSubstitution",frontMatter:{id:"null-substitution",title:"NullSubstitution",sidebar_label:"NullSubstitution"},sidebar:"docs",previous:{title:"ConvertUsing",permalink:"/docs/mapping-configuration/convert-using"},next:{title:"Ignore",permalink:"/docs/mapping-configuration/ignore"}},l=[],p={toc:l};function s(t){var e=t.components,n=(0,i.Z)(t,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"nullSubstitution()")," takes in a raw value to map to the member on ",(0,o.kt)("strong",{parentName:"p"},"Destination"),". If you pass in an object, ",(0,o.kt)("inlineCode",{parentName:"p"},"Mapper")," will map the object as-is without any consideration for nested ",(0,o.kt)("inlineCode",{parentName:"p"},"Mapping"),"."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"nullSubstitution()")," uses strict equality check ",(0,o.kt)("inlineCode",{parentName:"p"},"=== null")," to make the comparison. Hence, ",(0,o.kt)("inlineCode",{parentName:"p"},"undefined")," value will ",(0,o.kt)("strong",{parentName:"p"},"not")," be substituted."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { nullSubstitution } from '@automapper/core';\n\nmapper\n  .createMap(User, UserDto)\n  .forMember(\n    (destination) => destination.fullName,\n    nullSubstitution('full name')\n  );\n\nconst user = { fullName: null };\n\nmapper.map(user, UserDto, User); // { fullName: 'full name' }\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"nullSubstitution()")," will set the ",(0,o.kt)("inlineCode",{parentName:"p"},"TransformationType")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"TransformationType.NullSubstitution")))}s.isMDXComponent=!0}}]);